{"ast":null,"code":"import playerRank from './PlayerRank.json';\nimport axios from 'axios';\nexport async function getPlayers() {\n  var allPlayers = [];\n\n  for (let j = 1; j <= 10; j++) {\n    let fullName = playerRank[j.toString()];\n    await axios.get('https://www.balldontlie.io/api/v1/players?search=' + fullName).then(response => {\n      let player = response.data;\n      console.log(player.data[0]);\n      allPlayers.push(player.data[0]);\n      return;\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  return allPlayers;\n}\nexport async function retrieveAllPokemon(ids) {\n  var pokemons = [];\n\n  for (let index = 0; index < ids.length; index++) {\n    let curr_id = ids[index];\n    await axios.get(`https://pokeapi.co/api/v2/pokemon/${curr_id}`, {}).then(res => {\n      const results = res.data;\n      let curr_pokemon = {};\n      curr_pokemon.name = results.name;\n      curr_pokemon.id = parseInt(ids[index]);\n      let types = results.types;\n      let type_list = [];\n\n      for (let i = 0; i < types.length; i++) {\n        type_list.push(types[i].type.name);\n      }\n\n      curr_pokemon.type = type_list;\n      curr_pokemon.weight = results.weight;\n      let moves = results.moves;\n      let move_list = [];\n\n      for (let i = 0; i < moves.length; i++) {\n        move_list.push(moves[i].move.name);\n      }\n\n      curr_pokemon.moves = move_list;\n      curr_pokemon.sprites = results.sprites.front_default;\n      pokemons.push(curr_pokemon);\n      return;\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  return pokemons;\n}","map":{"version":3,"sources":["/Users/tedshaoxue/cs498rk/mp2/src/ApiRequests.js"],"names":["playerRank","axios","getPlayers","allPlayers","j","fullName","toString","get","then","response","player","data","console","log","push","catch","error","retrieveAllPokemon","ids","pokemons","index","length","curr_id","res","results","curr_pokemon","name","id","parseInt","types","type_list","i","type","weight","moves","move_list","move","sprites","front_default"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,mBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,eAAeC,UAAf,GAA4B;AAC/B,MAAIC,UAAU,GAAG,EAAjB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1B,QAAIC,QAAQ,GAAGL,UAAU,CAACI,CAAC,CAACE,QAAF,EAAD,CAAzB;AACA,UAAML,KAAK,CAACM,GAAN,CAAU,sDAAsDF,QAAhE,EACLG,IADK,CACCC,QAAD,IAAc;AAChB,UAAIC,MAAM,GAAGD,QAAQ,CAACE,IAAtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACC,IAAP,CAAY,CAAZ,CAAZ;AACAR,MAAAA,UAAU,CAACW,IAAX,CAAgBJ,MAAM,CAACC,IAAP,CAAY,CAAZ,CAAhB;AACA;AACH,KANK,EAOLI,KAPK,CAOGC,KAAD,IAAW;AACfJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH,KATK,CAAN;AAUH;;AACD,SAAOb,UAAP;AACH;AAED,OAAO,eAAec,kBAAf,CAAkCC,GAAlC,EAAuC;AAC5C,MAAIC,QAAQ,GAAG,EAAf;;AACA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGF,GAAG,CAACG,MAAhC,EAAwCD,KAAK,EAA7C,EAAiD;AAC/C,QAAIE,OAAO,GAAGJ,GAAG,CAACE,KAAD,CAAjB;AACA,UAAMnB,KAAK,CAACM,GAAN,CAAW,qCAAoCe,OAAQ,EAAvD,EAAyD,EAAzD,EAA6Dd,IAA7D,CAAkEe,GAAG,IAAE;AAC3E,YAAMC,OAAO,GAAGD,GAAG,CAACZ,IAApB;AACA,UAAIc,YAAY,GAAG,EAAnB;AACAA,MAAAA,YAAY,CAACC,IAAb,GAAoBF,OAAO,CAACE,IAA5B;AACAD,MAAAA,YAAY,CAACE,EAAb,GAAkBC,QAAQ,CAACV,GAAG,CAACE,KAAD,CAAJ,CAA1B;AACA,UAAIS,KAAK,GAAGL,OAAO,CAACK,KAApB;AACA,UAAIC,SAAS,GAAG,EAAhB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACR,MAA1B,EAAkCU,CAAC,EAAnC,EAAuC;AACrCD,QAAAA,SAAS,CAAChB,IAAV,CAAee,KAAK,CAACE,CAAD,CAAL,CAASC,IAAT,CAAcN,IAA7B;AACD;;AACDD,MAAAA,YAAY,CAACO,IAAb,GAAoBF,SAApB;AACAL,MAAAA,YAAY,CAACQ,MAAb,GAAsBT,OAAO,CAACS,MAA9B;AAEA,UAAIC,KAAK,GAAGV,OAAO,CAACU,KAApB;AACA,UAAIC,SAAS,GAAG,EAAhB;;AACA,WAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGG,KAAK,CAACb,MAA1B,EAAkCU,CAAC,EAAnC,EAAuC;AACrCI,QAAAA,SAAS,CAACrB,IAAV,CAAeoB,KAAK,CAACH,CAAD,CAAL,CAASK,IAAT,CAAcV,IAA7B;AACD;;AACDD,MAAAA,YAAY,CAACS,KAAb,GAAqBC,SAArB;AAEAV,MAAAA,YAAY,CAACY,OAAb,GAAuBb,OAAO,CAACa,OAAR,CAAgBC,aAAvC;AACAnB,MAAAA,QAAQ,CAACL,IAAT,CAAcW,YAAd;AACA;AACD,KAvBK,EAwBLV,KAxBK,CAwBEC,KAAD,IAAW;AAChBJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,KA1BK,CAAN;AA4BD;;AACD,SAAOG,QAAP;AAED","sourcesContent":["import playerRank from './PlayerRank.json'\nimport axios from 'axios'\n\nexport async function getPlayers() {\n    var allPlayers = [];\n    for (let j = 1; j <= 10; j++) {\n        let fullName = playerRank[j.toString()];\n        await axios.get('https://www.balldontlie.io/api/v1/players?search=' + fullName)\n        .then((response) => {\n            let player = response.data;\n            console.log(player.data[0]);\n            allPlayers.push(player.data[0])\n            return;\n        })\n        .catch( (error) => {\n            console.log(error)\n        })\n    }\n    return allPlayers;\n}\n\nexport async function retrieveAllPokemon(ids) {\n  var pokemons = [];\n  for (let index = 0; index < ids.length; index++) {\n    let curr_id = ids[index];\n    await axios.get(`https://pokeapi.co/api/v2/pokemon/${curr_id}`,{}).then(res=>{\n      const results = res.data;\n      let curr_pokemon = {};\n      curr_pokemon.name = results.name;\n      curr_pokemon.id = parseInt(ids[index]);\n      let types = results.types;\n      let type_list = []\n      for (let i = 0; i < types.length; i++) {\n        type_list.push(types[i].type.name)\n      }\n      curr_pokemon.type = type_list;\n      curr_pokemon.weight = results.weight;\n\n      let moves = results.moves;\n      let move_list = []\n      for (let i = 0; i < moves.length; i++) {\n        move_list.push(moves[i].move.name)\n      }\n      curr_pokemon.moves = move_list;\n\n      curr_pokemon.sprites = results.sprites.front_default;\n      pokemons.push(curr_pokemon);\n      return;\n    })\n    .catch((error) => {\n      console.log(error)\n    })\n    \n  }\n  return pokemons;\n\n}\n\n"]},"metadata":{},"sourceType":"module"}