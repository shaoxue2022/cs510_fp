{"ast":null,"code":"var _jsxFileName = \"/Users/tedshaoxue/cs498rk/mp2/src/Results/Results.js\";\nimport { Component } from 'react';\nimport './Results.css';\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Results extends Component {\n  constructor(props) {\n    super(props);\n    this.players;\n  }\n\n  orderPlayers(order, unorderedPlayers) {\n    if (order == \"asc\") {\n      var sortedPlayers = unorderedPlayers;\n      var statToSort = this.state.statistic;\n      sortedPlayers.sort(function (a, b) {\n        return a[statToSort] - b[statToSort];\n      });\n      this.setState({\n        players: sortedPlayers\n      });\n    } else if (order == \"desc\") {\n      var sortedPlayers = unorderedPlayers;\n      var statToSort = this.state.statistic;\n      sortedPlayers.sort(function (a, b) {\n        return b[statToSort] - a[statToSort];\n      });\n      this.setState({\n        players: sortedPlayers\n      });\n    } else {\n      this.setState({\n        players: unorderedPlayers\n      });\n    }\n  }\n\n  render() {\n    const statKey = this.props.statistic;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"Results\",\n      children: this.props.players.map(player => /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"Player-Item\",\n        children: player.first_name + \" \" + player.last_name + \" \" + player[statKey]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nResults.propTypes = {\n  players: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    first_name: PropTypes.string.isRequired,\n    height_feet: PropTypes.number.isRequired,\n    height_inches: PropTypes.number.isRequired,\n    last_name: PropTypes.string.isRequired,\n    position: PropTypes.string.isRequired,\n    team: PropTypes.object.isRequired,\n    weight_pounds: PropTypes.number.isRequired\n  })).isRequired,\n  statistic: PropTypes.string.isRequired\n};\nResults.defaultProps = {\n  players: [],\n  statistic: \"\"\n};\nexport default Results;","map":{"version":3,"sources":["/Users/tedshaoxue/cs498rk/mp2/src/Results/Results.js"],"names":["Component","PropTypes","Results","constructor","props","players","orderPlayers","order","unorderedPlayers","sortedPlayers","statToSort","state","statistic","sort","a","b","setState","render","statKey","map","player","first_name","last_name","propTypes","arrayOf","shape","id","number","isRequired","string","height_feet","height_inches","position","team","object","weight_pounds","defaultProps"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAO,eAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAC5BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,OAAL;AACH;;AAsBDC,EAAAA,YAAY,CAACC,KAAD,EAAQC,gBAAR,EAA0B;AAClC,QAAID,KAAK,IAAI,KAAb,EAAoB;AAClB,UAAIE,aAAa,GAAGD,gBAApB;AACA,UAAIE,UAAU,GAAG,KAAKC,KAAL,CAAWC,SAA5B;AACAH,MAAAA,aAAa,CAACI,IAAd,CAAmB,UAASC,CAAT,EAAYC,CAAZ,EAAe;AAChC,eAAOD,CAAC,CAACJ,UAAD,CAAD,GAAgBK,CAAC,CAACL,UAAD,CAAxB;AACD,OAFD;AAGA,WAAKM,QAAL,CAAc;AAAEX,QAAAA,OAAO,EAAGI;AAAZ,OAAd;AACD,KAPD,MAOO,IAAIF,KAAK,IAAI,MAAb,EAAqB;AAC1B,UAAIE,aAAa,GAAGD,gBAApB;AACA,UAAIE,UAAU,GAAG,KAAKC,KAAL,CAAWC,SAA5B;AACAH,MAAAA,aAAa,CAACI,IAAd,CAAmB,UAASC,CAAT,EAAYC,CAAZ,EAAe;AAChC,eAAOA,CAAC,CAACL,UAAD,CAAD,GAAgBI,CAAC,CAACJ,UAAD,CAAxB;AACD,OAFD;AAGA,WAAKM,QAAL,CAAc;AAAEX,QAAAA,OAAO,EAAGI;AAAZ,OAAd;AACD,KAPM,MAOA;AACL,WAAKO,QAAL,CAAc;AAAEX,QAAAA,OAAO,EAAGG;AAAZ,OAAd;AACD;AACF;;AAEHS,EAAAA,MAAM,GAAG;AACL,UAAMC,OAAO,GAAG,KAAKd,KAAL,CAAWQ,SAA3B;AAEA,wBACI;AAAK,MAAA,KAAK,EAAG,SAAb;AAAA,gBAEK,KAAKR,KAAL,CAAWC,OAAX,CAAmBc,GAAnB,CAAwBC,MAAD,iBACpB;AAAK,QAAA,KAAK,EAAG,aAAb;AAAA,kBACKA,MAAM,CAACC,UAAP,GAAoB,GAApB,GAA0BD,MAAM,CAACE,SAAjC,GAA6C,GAA7C,GAAmDF,MAAM,CAACF,OAAD;AAD9D;AAAA;AAAA;AAAA;AAAA,cADH;AAFL;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AA7D2B;;AAA1BhB,O,CAKKqB,S,GAAY;AACflB,EAAAA,OAAO,EAAEJ,SAAS,CAACuB,OAAV,CACLvB,SAAS,CAACwB,KAAV,CAAgB;AACZC,IAAAA,EAAE,EAAEzB,SAAS,CAAC0B,MAAV,CAAiBC,UADT;AAEZP,IAAAA,UAAU,EAAEpB,SAAS,CAAC4B,MAAV,CAAiBD,UAFjB;AAGZE,IAAAA,WAAW,EAAE7B,SAAS,CAAC0B,MAAV,CAAiBC,UAHlB;AAIZG,IAAAA,aAAa,EAAE9B,SAAS,CAAC0B,MAAV,CAAiBC,UAJpB;AAKZN,IAAAA,SAAS,EAAErB,SAAS,CAAC4B,MAAV,CAAiBD,UALhB;AAMZI,IAAAA,QAAQ,EAAE/B,SAAS,CAAC4B,MAAV,CAAiBD,UANf;AAOZK,IAAAA,IAAI,EAAEhC,SAAS,CAACiC,MAAV,CAAiBN,UAPX;AAQZO,IAAAA,aAAa,EAAElC,SAAS,CAAC0B,MAAV,CAAiBC;AARpB,GAAhB,CADK,EAWPA,UAZa;AAafhB,EAAAA,SAAS,EAAEX,SAAS,CAAC4B,MAAV,CAAiBD;AAbb,C;AALjB1B,O,CAqBKkC,Y,GAAe;AAClB/B,EAAAA,OAAO,EAAE,EADS;AAElBO,EAAAA,SAAS,EAAE;AAFO,C;AA2C1B,eAAeV,OAAf","sourcesContent":["import { Component } from 'react';\nimport './Results.css'\nimport PropTypes from \"prop-types\";\n\nclass Results extends Component {  \n    constructor(props) {\n        super(props);\n        this.players;\n    }\n    static propTypes = {\n        players: PropTypes.arrayOf(\n            PropTypes.shape({\n                id: PropTypes.number.isRequired,\n                first_name: PropTypes.string.isRequired,\n                height_feet: PropTypes.number.isRequired,\n                height_inches: PropTypes.number.isRequired,\n                last_name: PropTypes.string.isRequired,\n                position: PropTypes.string.isRequired,\n                team: PropTypes.object.isRequired,\n                weight_pounds: PropTypes.number.isRequired\n            })\n        ).isRequired,\n        statistic: PropTypes.string.isRequired\n    };\n      \n    static defaultProps = {\n        players: [],\n        statistic: \"\"\n    }\n\n    orderPlayers(order, unorderedPlayers) {\n        if (order == \"asc\") {\n          var sortedPlayers = unorderedPlayers;\n          var statToSort = this.state.statistic;\n          sortedPlayers.sort(function(a, b) {\n            return a[statToSort] - b[statToSort];\n          });\n          this.setState({ players : sortedPlayers });\n        } else if (order == \"desc\") {\n          var sortedPlayers = unorderedPlayers;\n          var statToSort = this.state.statistic;\n          sortedPlayers.sort(function(a, b) {\n            return b[statToSort] - a[statToSort];\n          });\n          this.setState({ players : sortedPlayers });\n        } else {\n          this.setState({ players : unorderedPlayers });\n        }\n      }\n    \n    render() {\n        const statKey = this.props.statistic;\n        \n        return (\n            <div class = \"Results\">\n                \n                {this.props.players.map((player) => (\n                    <div class = \"Player-Item\">\n                        {player.first_name + \" \" + player.last_name + \" \" + player[statKey]}\n                    </div>\n                ))}\n\n            </div>\n        );\n        \n    }\n}\n  \nexport default Results;\n"]},"metadata":{},"sourceType":"module"}