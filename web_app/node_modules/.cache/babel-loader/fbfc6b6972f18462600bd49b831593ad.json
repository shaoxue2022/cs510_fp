{"ast":null,"code":"var _jsxFileName = \"/Users/tedshaoxue/cs498rk/mp2/src/Results/Results.js\";\nimport { Component } from 'react';\nimport './Results.css';\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Results extends Component {\n  getStatistic(player, season = 2020) {\n    const statKey = this.props.statistic;\n    var xhr = new XMLHttpRequest();\n    xhr.onreadystatechange = xhrHandler;\n    xhr.open('get', 'https://www.balldontlie.io/api/v1/season_averages?season=\"+season+\"&player_ids[]=\"+player.id+\"');\n    xhr.send(null);\n\n    function xhrHandler() {\n      if (xhr.readyState == 4 && xhr.status == 200) {\n        var data = JSON.parse(xhr.responseText);\n        myFunction(data);\n      }\n    }\n\n    ;\n    var players = 120;\n\n    function myFunction(data) {\n      players = data.data[1].id;\n      console.log(players);\n      return players;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"Results\",\n      children: this.props.players.map(player => /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"Player-Item\",\n        children: player.first_name + \" \" + player.last_name + \" \" + getStatistic(player)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nResults.propTypes = {\n  players: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    first_name: PropTypes.string.isRequired,\n    height_feet: PropTypes.number.isRequired,\n    height_inches: PropTypes.number.isRequired,\n    last_name: PropTypes.string.isRequired,\n    position: PropTypes.string.isRequired,\n    team: PropTypes.object.isRequired,\n    weight_pounds: PropTypes.number.isRequired\n  })).isRequired,\n  statistic: PropTypes.string.isRequired\n};\nResults.defaultProps = {\n  players: [],\n  statistic: \"\"\n};\nexport default Results;","map":{"version":3,"sources":["/Users/tedshaoxue/cs498rk/mp2/src/Results/Results.js"],"names":["Component","PropTypes","Results","getStatistic","player","season","statKey","props","statistic","xhr","XMLHttpRequest","onreadystatechange","xhrHandler","open","send","readyState","status","data","JSON","parse","responseText","myFunction","players","id","console","log","render","map","first_name","last_name","propTypes","arrayOf","shape","number","isRequired","string","height_feet","height_inches","position","team","object","weight_pounds","defaultProps"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAO,eAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAsB5BG,EAAAA,YAAY,CAACC,MAAD,EAASC,MAAM,GAAG,IAAlB,EAAwB;AAChC,UAAMC,OAAO,GAAG,KAAKC,KAAL,CAAWC,SAA3B;AAEA,QAAIC,GAAG,GAAG,IAAIC,cAAJ,EAAV;AACAD,IAAAA,GAAG,CAACE,kBAAJ,GAAyBC,UAAzB;AACAH,IAAAA,GAAG,CAACI,IAAJ,CAAS,KAAT,EAAgB,gGAAhB;AACAJ,IAAAA,GAAG,CAACK,IAAJ,CAAS,IAAT;;AAEA,aAASF,UAAT,GAAsB;AAClB,UAAIH,GAAG,CAACM,UAAJ,IAAkB,CAAlB,IAAuBN,GAAG,CAACO,MAAJ,IAAc,GAAzC,EAA8C;AAC1C,YAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWV,GAAG,CAACW,YAAf,CAAX;AACAC,QAAAA,UAAU,CAACJ,IAAD,CAAV;AACH;AACJ;;AAAA;AACD,QAAIK,OAAO,GAAG,GAAd;;AACA,aAASD,UAAT,CAAoBJ,IAApB,EAA0B;AACtBK,MAAAA,OAAO,GAAGL,IAAI,CAACA,IAAL,CAAU,CAAV,EAAaM,EAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,aAAOA,OAAP;AACH;AAEJ;;AAEDI,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,KAAK,EAAG,SAAb;AAAA,gBAEK,KAAKnB,KAAL,CAAWe,OAAX,CAAmBK,GAAnB,CAAwBvB,MAAD,iBACpB;AAAK,QAAA,KAAK,EAAG,aAAb;AAAA,kBACKA,MAAM,CAACwB,UAAP,GAAoB,GAApB,GAA0BxB,MAAM,CAACyB,SAAjC,GAA6C,GAA7C,GAAmD1B,YAAY,CAACC,MAAD;AADpE;AAAA;AAAA;AAAA;AAAA,cADH;AAFL;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AAzD2B;;AAA1BF,O,CACK4B,S,GAAY;AACfR,EAAAA,OAAO,EAAErB,SAAS,CAAC8B,OAAV,CACL9B,SAAS,CAAC+B,KAAV,CAAgB;AACZT,IAAAA,EAAE,EAAEtB,SAAS,CAACgC,MAAV,CAAiBC,UADT;AAEZN,IAAAA,UAAU,EAAE3B,SAAS,CAACkC,MAAV,CAAiBD,UAFjB;AAGZE,IAAAA,WAAW,EAAEnC,SAAS,CAACgC,MAAV,CAAiBC,UAHlB;AAIZG,IAAAA,aAAa,EAAEpC,SAAS,CAACgC,MAAV,CAAiBC,UAJpB;AAKZL,IAAAA,SAAS,EAAE5B,SAAS,CAACkC,MAAV,CAAiBD,UALhB;AAMZI,IAAAA,QAAQ,EAAErC,SAAS,CAACkC,MAAV,CAAiBD,UANf;AAOZK,IAAAA,IAAI,EAAEtC,SAAS,CAACuC,MAAV,CAAiBN,UAPX;AAQZO,IAAAA,aAAa,EAAExC,SAAS,CAACgC,MAAV,CAAiBC;AARpB,GAAhB,CADK,EAWPA,UAZa;AAaf1B,EAAAA,SAAS,EAAEP,SAAS,CAACkC,MAAV,CAAiBD;AAbb,C;AADjBhC,O,CAiBKwC,Y,GAAe;AAClBpB,EAAAA,OAAO,EAAE,EADS;AAElBd,EAAAA,SAAS,EAAE;AAFO,C;AA2C1B,eAAeN,OAAf","sourcesContent":["import { Component } from 'react';\nimport './Results.css'\nimport PropTypes from \"prop-types\";\n\nclass Results extends Component {  \n    static propTypes = {\n        players: PropTypes.arrayOf(\n            PropTypes.shape({\n                id: PropTypes.number.isRequired,\n                first_name: PropTypes.string.isRequired,\n                height_feet: PropTypes.number.isRequired,\n                height_inches: PropTypes.number.isRequired,\n                last_name: PropTypes.string.isRequired,\n                position: PropTypes.string.isRequired,\n                team: PropTypes.object.isRequired,\n                weight_pounds: PropTypes.number.isRequired\n            })\n        ).isRequired,\n        statistic: PropTypes.string.isRequired\n    };\n      \n    static defaultProps = {\n        players: [],\n        statistic: \"\"\n    }\n\n    getStatistic(player, season = 2020) {\n        const statKey = this.props.statistic;\n\n        var xhr = new XMLHttpRequest();\n        xhr.onreadystatechange = xhrHandler;\n        xhr.open('get', 'https://www.balldontlie.io/api/v1/season_averages?season=\"+season+\"&player_ids[]=\"+player.id+\"');\n        xhr.send(null);\n\n        function xhrHandler() {\n            if (xhr.readyState == 4 && xhr.status == 200) {\n                var data = JSON.parse(xhr.responseText);\n                myFunction(data);\n            }\n        };\n        var players = 120;\n        function myFunction(data) {\n            players = data.data[1].id;\n            console.log(players);\n            return players;\n        }\n\n    }\n    \n    render() {\n        return (\n            <div class = \"Results\">\n                \n                {this.props.players.map((player) => (\n                    <div class = \"Player-Item\">\n                        {player.first_name + \" \" + player.last_name + \" \" + getStatistic(player)}\n                    </div>\n                ))}\n\n            </div>\n        );\n    }\n}\n  \nexport default Results;\n"]},"metadata":{},"sourceType":"module"}