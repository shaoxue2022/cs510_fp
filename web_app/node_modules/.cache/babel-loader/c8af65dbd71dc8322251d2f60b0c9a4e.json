{"ast":null,"code":"import playerRank from './PlayerRank.json';\nimport axios from 'axios';\nexport async function getPlayers() {\n  var playerList = [];\n\n  for (var j = 1; j <= 10; j++) {\n    var fullName = playerRank[j].toString();\n    axios.get('https://www.balldontlie.io/api/v1/players?search=' + fullName).then(res => {\n      const player = res.data.data[0];\n      let curPlayer = {};\n      curPlayer.id = player.id;\n      curPlayer.first_name = player.first_name;\n      curPlayer.last_name = player.last_name;\n      curPlayer.height_feet = player.height_feet;\n      curPlayer.height_inches = player.height_inches;\n      curPlayer.position = player.position;\n      curPlayer.team = player.team;\n      curPlayer.weight_pounds = player.weight_pounds;\n      /*\n      axios.get('https://www.balldontlie.io/api/v1/stats?season=2020&player_ids' + fullName)\n      console.log(allPlayers.find(element => element.id === player.id).ast);\n      curPlayer.min = allPlayers.find(element => element.id === player.id);\n      */\n\n      playerList.push(curPlayer);\n      return;\n    });\n  }\n\n  return playerList;\n}\nexport async function retrieveAllPokemon(ids) {\n  var pokemons = [];\n\n  for (let index = 0; index < ids.length; index++) {\n    let curr_id = ids[index];\n    await axios.get(`https://pokeapi.co/api/v2/pokemon/${curr_id}`, {}).then(res => {\n      const results = res.data;\n      let curr_pokemon = {};\n      curr_pokemon.name = results.name;\n      curr_pokemon.id = parseInt(ids[index]);\n      let types = results.types;\n      let type_list = [];\n\n      for (let i = 0; i < types.length; i++) {\n        type_list.push(types[i].type.name);\n      }\n\n      curr_pokemon.type = type_list;\n      curr_pokemon.weight = results.weight;\n      let moves = results.moves;\n      let move_list = [];\n\n      for (let i = 0; i < moves.length; i++) {\n        move_list.push(moves[i].move.name);\n      }\n\n      curr_pokemon.moves = move_list;\n      curr_pokemon.sprites = results.sprites.front_default;\n      pokemons.push(curr_pokemon);\n      return;\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  return pokemons;\n}","map":{"version":3,"sources":["/Users/tedshaoxue/cs498rk/mp2/src/ApiRequests.js"],"names":["playerRank","axios","getPlayers","playerList","j","fullName","toString","get","then","res","player","data","curPlayer","id","first_name","last_name","height_feet","height_inches","position","team","weight_pounds","push","retrieveAllPokemon","ids","pokemons","index","length","curr_id","results","curr_pokemon","name","parseInt","types","type_list","i","type","weight","moves","move_list","move","sprites","front_default","catch","error","console","log"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,mBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,eAAeC,UAAf,GAA4B;AAC/B,MAAIC,UAAU,GAAG,EAAjB;;AACE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5B,QAAIC,QAAQ,GAAGL,UAAU,CAACI,CAAD,CAAV,CAAcE,QAAd,EAAf;AACAL,IAAAA,KAAK,CAACM,GAAN,CAAU,sDAAsDF,QAAhE,EAA0EG,IAA1E,CACCC,GAAG,IAAI;AACN,YAAMC,MAAM,GAAGD,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAc,CAAd,CAAf;AACA,UAAIC,SAAS,GAAG,EAAhB;AACAA,MAAAA,SAAS,CAACC,EAAV,GAAeH,MAAM,CAACG,EAAtB;AACAD,MAAAA,SAAS,CAACE,UAAV,GAAuBJ,MAAM,CAACI,UAA9B;AACAF,MAAAA,SAAS,CAACG,SAAV,GAAsBL,MAAM,CAACK,SAA7B;AACAH,MAAAA,SAAS,CAACI,WAAV,GAAwBN,MAAM,CAACM,WAA/B;AACAJ,MAAAA,SAAS,CAACK,aAAV,GAA0BP,MAAM,CAACO,aAAjC;AACAL,MAAAA,SAAS,CAACM,QAAV,GAAqBR,MAAM,CAACQ,QAA5B;AACAN,MAAAA,SAAS,CAACO,IAAV,GAAiBT,MAAM,CAACS,IAAxB;AACAP,MAAAA,SAAS,CAACQ,aAAV,GAA0BV,MAAM,CAACU,aAAjC;AACA;AACV;AACA;AACA;AACA;;AACUjB,MAAAA,UAAU,CAACkB,IAAX,CAAgBT,SAAhB;AACA;AACD,KAnBD;AAoBH;;AACD,SAAOT,UAAP;AACH;AAED,OAAO,eAAemB,kBAAf,CAAkCC,GAAlC,EAAuC;AAC5C,MAAIC,QAAQ,GAAG,EAAf;;AACA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGF,GAAG,CAACG,MAAhC,EAAwCD,KAAK,EAA7C,EAAiD;AAC/C,QAAIE,OAAO,GAAGJ,GAAG,CAACE,KAAD,CAAjB;AACA,UAAMxB,KAAK,CAACM,GAAN,CAAW,qCAAoCoB,OAAQ,EAAvD,EAAyD,EAAzD,EAA6DnB,IAA7D,CAAkEC,GAAG,IAAE;AAC3E,YAAMmB,OAAO,GAAGnB,GAAG,CAACE,IAApB;AACA,UAAIkB,YAAY,GAAG,EAAnB;AACAA,MAAAA,YAAY,CAACC,IAAb,GAAoBF,OAAO,CAACE,IAA5B;AACAD,MAAAA,YAAY,CAAChB,EAAb,GAAkBkB,QAAQ,CAACR,GAAG,CAACE,KAAD,CAAJ,CAA1B;AACA,UAAIO,KAAK,GAAGJ,OAAO,CAACI,KAApB;AACA,UAAIC,SAAS,GAAG,EAAhB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACN,MAA1B,EAAkCQ,CAAC,EAAnC,EAAuC;AACrCD,QAAAA,SAAS,CAACZ,IAAV,CAAeW,KAAK,CAACE,CAAD,CAAL,CAASC,IAAT,CAAcL,IAA7B;AACD;;AACDD,MAAAA,YAAY,CAACM,IAAb,GAAoBF,SAApB;AACAJ,MAAAA,YAAY,CAACO,MAAb,GAAsBR,OAAO,CAACQ,MAA9B;AAEA,UAAIC,KAAK,GAAGT,OAAO,CAACS,KAApB;AACA,UAAIC,SAAS,GAAG,EAAhB;;AACA,WAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGG,KAAK,CAACX,MAA1B,EAAkCQ,CAAC,EAAnC,EAAuC;AACrCI,QAAAA,SAAS,CAACjB,IAAV,CAAegB,KAAK,CAACH,CAAD,CAAL,CAASK,IAAT,CAAcT,IAA7B;AACD;;AACDD,MAAAA,YAAY,CAACQ,KAAb,GAAqBC,SAArB;AAEAT,MAAAA,YAAY,CAACW,OAAb,GAAuBZ,OAAO,CAACY,OAAR,CAAgBC,aAAvC;AACAjB,MAAAA,QAAQ,CAACH,IAAT,CAAcQ,YAAd;AACA;AACD,KAvBK,EAwBLa,KAxBK,CAwBEC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KA1BK,CAAN;AA4BD;;AACD,SAAOnB,QAAP;AAED","sourcesContent":["import playerRank from './PlayerRank.json'\nimport axios from 'axios'\n\nexport async function getPlayers() {\n    var playerList = [];\n      for (var j = 1; j <= 10; j++) {\n        var fullName = playerRank[j].toString();\n        axios.get('https://www.balldontlie.io/api/v1/players?search=' + fullName).then\n        (res => {\n          const player = res.data.data[0];\n          let curPlayer = {};\n          curPlayer.id = player.id;\n          curPlayer.first_name = player.first_name;\n          curPlayer.last_name = player.last_name;\n          curPlayer.height_feet = player.height_feet;\n          curPlayer.height_inches = player.height_inches;\n          curPlayer.position = player.position;\n          curPlayer.team = player.team;\n          curPlayer.weight_pounds = player.weight_pounds;\n          /*\n          axios.get('https://www.balldontlie.io/api/v1/stats?season=2020&player_ids' + fullName)\n          console.log(allPlayers.find(element => element.id === player.id).ast);\n          curPlayer.min = allPlayers.find(element => element.id === player.id);\n          */\n          playerList.push(curPlayer);\n          return;\n        });\n    }\n    return playerList;\n}\n\nexport async function retrieveAllPokemon(ids) {\n  var pokemons = [];\n  for (let index = 0; index < ids.length; index++) {\n    let curr_id = ids[index];\n    await axios.get(`https://pokeapi.co/api/v2/pokemon/${curr_id}`,{}).then(res=>{\n      const results = res.data;\n      let curr_pokemon = {};\n      curr_pokemon.name = results.name;\n      curr_pokemon.id = parseInt(ids[index]);\n      let types = results.types;\n      let type_list = []\n      for (let i = 0; i < types.length; i++) {\n        type_list.push(types[i].type.name)\n      }\n      curr_pokemon.type = type_list;\n      curr_pokemon.weight = results.weight;\n\n      let moves = results.moves;\n      let move_list = []\n      for (let i = 0; i < moves.length; i++) {\n        move_list.push(moves[i].move.name)\n      }\n      curr_pokemon.moves = move_list;\n\n      curr_pokemon.sprites = results.sprites.front_default;\n      pokemons.push(curr_pokemon);\n      return;\n    })\n    .catch((error) => {\n      console.log(error)\n    })\n    \n  }\n  return pokemons;\n\n}\n\n"]},"metadata":{},"sourceType":"module"}